<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honpe.mapper.OfferMapper" >
  <resultMap id="BaseResultMap" type="com.honpe.po.Offer" >
    <id column="oid" property="oid" jdbcType="VARCHAR" />
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="taxRate" property="taxrate" jdbcType="DOUBLE" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="pid" property="pid" jdbcType="VARCHAR" />
    <result column="isdel" property="isdel" jdbcType="TINYINT" />
    <result column="offerTime" property="offertime" jdbcType="DATE" />
    <result column="did" property="did" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    oid, id, price, taxRate, createTime, updateTime, pid, isdel, offerTime, did
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.honpe.po.OfferExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from offer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from offer
    where oid = #{oid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from offer
    where oid = #{oid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.honpe.po.OfferExample" >
    delete from offer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.honpe.po.Offer" >
    insert into offer (oid, id, price, 
      taxRate, createTime, updateTime, 
      pid, isdel, offerTime, 
      did)
    values (#{oid,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{taxrate,jdbcType=DOUBLE}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{pid,jdbcType=VARCHAR}, #{isdel,jdbcType=TINYINT}, #{offertime,jdbcType=DATE}, 
      #{did,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.honpe.po.Offer" >
    insert into offer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        oid,
      </if>
      <if test="id != null" >
        id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="taxrate != null" >
        taxRate,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
      <if test="offertime != null" >
        offerTime,
      </if>
      <if test="did != null" >
        did,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        #{oid,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="taxrate != null" >
        #{taxrate,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=TINYINT},
      </if>
      <if test="offertime != null" >
        #{offertime,jdbcType=DATE},
      </if>
      <if test="did != null" >
        #{did,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.honpe.po.OfferExample" resultType="java.lang.Integer" >
    select count(*) from offer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update offer
    <set >
      <if test="record.oid != null" >
        oid = #{record.oid,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.taxrate != null" >
        taxRate = #{record.taxrate,jdbcType=DOUBLE},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=VARCHAR},
      </if>
      <if test="record.isdel != null" >
        isdel = #{record.isdel,jdbcType=TINYINT},
      </if>
      <if test="record.offertime != null" >
        offerTime = #{record.offertime,jdbcType=DATE},
      </if>
      <if test="record.did != null" >
        did = #{record.did,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update offer
    set oid = #{record.oid,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      taxRate = #{record.taxrate,jdbcType=DOUBLE},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      pid = #{record.pid,jdbcType=VARCHAR},
      isdel = #{record.isdel,jdbcType=TINYINT},
      offerTime = #{record.offertime,jdbcType=DATE},
      did = #{record.did,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.honpe.po.Offer" >
    update offer
    <set >
      <if test="id != null" >
        id = #{id,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="taxrate != null" >
        taxRate = #{taxrate,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=TINYINT},
      </if>
      <if test="offertime != null" >
        offerTime = #{offertime,jdbcType=DATE},
      </if>
      <if test="did != null" >
        did = #{did,jdbcType=VARCHAR},
      </if>
    </set>
    where oid = #{oid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honpe.po.Offer" >
    update offer
    set id = #{id,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      taxRate = #{taxrate,jdbcType=DOUBLE},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      pid = #{pid,jdbcType=VARCHAR},
      isdel = #{isdel,jdbcType=TINYINT},
      offerTime = #{offertime,jdbcType=DATE},
      did = #{did,jdbcType=VARCHAR}
    where oid = #{oid,jdbcType=VARCHAR}
  </update>
</mapper>